#!/bin/bash
#
# Script to perform some common system operations
#

echo "Loading please wait...."

cd ~/GitRepo/Scripts
source ~/.bashrc
source ./lib/bash/machines
source ./lib/bash/burnISO
source ./lib/bash/editFiles
source ./lib/bash/otherScripts

red=`tput setaf 1`
green=`tput setaf 2`
blue=`tput setaf 6`
reset=`tput sgr0`

export TERM=xterm

declare ip_address=("${raspi1[0]}" "${raspi2[0]}" "${raspi3[0]}" "${raspi4[0]}" "${raspi6[0]}" "${raspi7[0]}" "${server1[0]}" "${server2[0]}")

for i in "${ip_address[@]}"
do
  case $i in
	${raspi1[0]})
		name=${raspi1[1]}
		;;
	${raspi2[0]})
		name=${raspi2[1]}
		;;
	${raspi3[0]})
		name=${raspi3[1]}
		;;
	${raspi4[0]})
		name=${raspi4[1]}
		;;
	${raspi6[0]})
		name=${raspi6[1]}
		;;
	${raspi7[0]})
		name=${raspi7[1]}
		;;
	${server1[0]})
		name=${server1[1]}
		;;
	${server2[0]})
		name=${server2[1]}
		;;
	esac
  if ping -c 1 $i > /dev/null ; then
	export ${name}_ifup="${green}On-Line${reset}"
  else
    export ${name}_ifup="${red}Off-Line${reset}"
  fi
done
export my_ip=$(dig +short myip.opendns.com @resolver1.opendns.com)
export PUBLIC_IP=$my_ip
export internal_ip=$(hostname -I)
export iaincstott_ip=$(dig +short iaincstott.co.uk @resolver1.opendns.com)
export domain_ip=$iaincstott_ip
website_up=$(./lib/bash/otherScripts; websiteCHECK)
uptime=$(  uptime | tr "," " " | cut -f4-5 -d" ")
df_websites=$(df -H / /media/Backup_NET/ /media/Software_NET/ /media/Websites_NET/ /media/Data_Drive/ /media/Storage_Drive/ /media/Backup_Drive/)
if [ $domain_ip == $PUBLIC_IP ]; then 
	export DOMAIN_IP="${green}$domain_ip${reset}"
else
	export DOMAIN_IP="${red}$domain_ip${reset}"
fi
if [ $domain_ip == $PUBLIC_IP ]; then 
	export public_ip="${green}$PUBLIC_IP${reset}"
else
	export public_ip="${red}$PUBLIC_IP${reset}"
fi

function bladeSever_STATE {
	if [ ${Server2_ifup} == "${red}Off-Line${reset}" ] > /dev/null ; then
		sudo ether-wake f0:4d:a2:db:e0:d8
	else
		ssh ${server2[3]}@${server2[0]} "sudo shutdown -now"
	fi
}

while :
do
clear
echo "${blue}**************************************************************************************************************"
echo "* ${blue}Systems Menu${reset} *				"
echo "* ${blue}Local IP = ${reset}${green}$internal_ip${reset} *"
echo "* ${blue}Domain IP = ${reset}$DOMAIN_IP 			Rpi-1 = $Raspi1_ifup 		Rpi-6 = $Raspi6_ifup"
echo "* ${blue}Public IP = ${reset}$public_ip 			Rpi-2 = $Raspi2_ifup 		Rpi-7 = $Raspi7_ifup" 
echo "* ${blue}Website = ${reset}$website_up 				Rpi-3 = $Raspi3_ifup 		Server 1 = $Server1_ifup"
echo "* ${blue}Uptime = ${reset}$uptime				Rpi-4 = $Raspi4_ifup			Server 2 = $Server2_ifup"
echo "* ${blue}OS = ${reset}"$(cat /etc/issue.net)""
echo "* ${blue}Remote Storage -${green} 
$df_websites${reset}"
echo "${blue}**************************************************************************************************************"
echo "* [1] Backup Scripts"
echo "* [2] Edit Config Files"
echo "* [3] Servers Menu"
echo "* [4] Burn ISO"
echo "* [5] Flash Arduino"
echo "* [6] Vitrualization Tools"
echo "* [7] Kill App"
echo "* [8] Sleep or Wake BaldeServer"
echo "* [9] "
echo "* "
echo "* [u] Update Git Repos"
echo "* [r] Reload Menu"
echo "* [x] Exit/Stop *"
echo "${blue}**************************************************************************************************************"
echo "${blue}Enter your menu choice [1-0]: "
read yourch
case $yourch in
1) backupRoutine_backupGUI ;;
2) editFiles_GUI;;
3) ;;
4) burnISOGUI ;;
5) ;;
6) virtualizationTools_GUI ;;
7)  ;;
8) bladeSever_STATE ;;
9) sudo  ether_wake ${server[2]} ;;
u) cd /home/iainstott/GitRepo/ && for i in $( ls ); do cd $i; echo "Repository = "$i; git-update; echo ""; cd /home/iainstott/GitRepo; done ;;
s) sh ./Scripts/backend/secret.script ;;
r) sh ./Menu ;;
x) exit 0;;
*) echo "Oopps!!! Please select choice 1,2,3 or 4";
echo "Press Enter to continue. . ." ; read ;;
esac
done

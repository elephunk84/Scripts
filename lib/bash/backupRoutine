#!/bin/bash

daily="/daily/"
archive="/archive/"
backupDir2="/media/Backup_Drive/"
backupDir="/media/Storage_Drive/Backup/"
softwareDir="/media/Storage_Drive/Storage/"
dataDir="/media/Data_Drive/"
NFSShare="/media/Backup_NET/"
NFSSoftware="/media/Software_NET/"
GitRepo="/media/Backup_NET/GitRepo/"
logsDir="${NFSShare}logs/"

raspi1=('192.168.0.4' 'Raspi-1' 'iainstott')
raspi2=('192.168.1.2' 'Raspi-2' 'osmc')
raspi3=('192.168.1.3' 'Raspi-3' 'iainstott')
raspi4=('192.168.1.4' 'Raspi-4' 'iainstott')
raspi5=('192.168.0.5' 'Raspi-5' 'iainstott')
raspi6=('192.168.0.130' 'Raspi-6' 'osmc')
raspi7=('192.168.0.131' 'Raspi-7' 'pi')

raspi1=('192.168.0.4' 'Raspi-1' 'root')

declare machines=( "${raspi1[0]}" "${raspi2[0]}" "${raspi3[0]}" "${raspi4[0]}" "${raspi6[0]}" "${raspi7[0]}")

command="rsync -aAXHv --delete-during --exclude-from=/home/iainstott/GitRepo/Scripts/lib/rsync_exclude.txt "
command="rsync -aAXHv --exclude-from=/home/iainstott/GitRepo/Scripts/lib/rsync_exclude.txt "

THRESHOLD=$(date -d "46 days ago" +%d-%m-%Y_%H:%M)
DELETE_OTHERS="yes"

function backupRoutine_RASPI1 {
    echo "Now processing Raspi-1"
    touch ${logsDir}${raspi1[1]}_${date}.log
    ${command} --log-file=${logsDir}${raspi1[1]}_${date}.log ${raspi1[2]}@${raspi1[0]}:/ ${NFSShare}/${raspi1[1]}${daily} 2>&1 >/dev/null
}
function backupRoutine_RASPI2 {
    echo "Now processing Raspi-2"
    touch ${logsDir}${raspi2[1]}_${date}.log
    ${command} --log-file=${logsDir}${raspi2[1]}_${date}.log ${raspi2[2]}@${raspi2[0]}:/ ${NFSShare}/${raspi2[1]}${daily} 2>&1 >/dev/null
}
function backupRoutine_RASPI3 {
    echo "Now processing Raspi-3"
    touch ${logsDir}${raspi3[1]}_${date}.log
    ${command} --log-file=${logsDir}${raspi3[1]}_${date}.log ${raspi3[2]}@${raspi3[0]}:/ ${NFSShare}/${raspi3[1]}${daily} 2>&1 >/dev/null
}
function backupRoutine_RASPI4 {
    echo "Now processing Raspi-4"
    touch ${logsDir}${raspi4[1]}_${date}.log
    ${command} --log-file=${logsDir}${raspi4[1]}_${date}.log ${raspi4[2]}@${raspi4[0]}:/ ${NFSShare}/${raspi4[1]}${daily} 2>&1 >/dev/null
}
function backupRoutine_RASPI5 {
    echo "Now processing Raspi-5"
    touch ${logsDir}${raspi5[1]}_${date}.log
    ${command} --log-file=${logsDir}${raspi5[1]}_${date}.log ${raspi5[2]}@${raspi5[0]}:/ ${NFSShare}/${raspi5[1]}${daily} 2>&1 >/dev/null
}
function backupRoutine_RASPI6 {
    echo "Now processing Raspi-6"
    touch ${logsDir}${raspi6[1]}_${date}.log
    ${command} --log-file=${logsDir}${raspi6[1]}_${date}.log ${raspi6[2]}@${raspi6[0]}:/ ${NFSShare}/${raspi6[1]}${daily} 2>&1 >/dev/null
    }
function backupRoutine_RASPI7 {
    echo "Now processing Raspi-7"
    touch ${logsDir}${raspi7[1]}_${date}.log
    ${command} --log-file=${logsDir}${raspi7[1]}_${date}.log ${raspi7[2]}@${raspi7[0]}:/ ${NFSShare}/${raspi7[1]}${daily} 2>&1 >/dev/null
}
function backupRoutine_backupGitRepo {
    cd ${GitRepo}
    for i in $( ls ); 
    do
        case $i in
        "wiringPi")
            echo "wiringpi Not Running..."
            return 1
            ;;
        "Twitter")
            echo "Twitter Not Running..."
            return 1
            ;;
        esac
        cd ${i}
        echo ${i}
        git add --all
        git commit -m "backupRoutine"
        git push origin master
        cd ${GitRepo}
    done
}

function backupRoutine_backupNFSShare {
    echo "Now processing NFSShare"
    touch ${logsDir}NFSSHARE_${date}.log
    touch ${logsDir}BACKUP_${date}.log
    ${command} --log-file=${logsDir}NFSSHARE_${date}.log ${NFSShare} ${backupDir} 2>&1 >/dev/null
    ${command} --log-file=${logsDir}BACKUP_${date}.log ${NFSShare} ${backupDir2} 2>&1 >/dev/null
}
function backupRoutine_backupSoftwareNET {
    echo "Now processing NFSSoftware"
    touch ${logsDir}NFSSoftware_${date}.log
    ${command} --log-file=${logsDir}NFSSoftware_${date}.log ${NFSSoftware} ${softwareDir} 2>&1 >/dev/null
	${command2} --log-file=${logsDir}DATADIR_${date}.log ${softwareDir} ${dataDir} 2>&1 >/dev/null
}

function backupRoutine_backupRPIS {
    date=$(date +%d-%m-%Y_%H:%M)
    backupRoutine_RASPI1
    backupRoutine_RASPI2
    backupRoutine_RASPI3
    backupRoutine_RASPI4
	backupRoutine_RASPI5
    backupRoutine_RASPI6
    backupRoutine_RASPI7
}
function backupRoutine_backupDAILY {
    backupRoutine_backupRPIS
    echo "Now processing GitRepo"
    backupRoutine_backupGitRepo >> ${logsDir}GitRepo_${date}.log
    echo "Now processing NFS Backup"
    backupRoutine_backupNFSShare >> ${logsDir}NFSShare_${date}.log
    echo "Now processing NFS Software"
    backupRoutine_backupSoftwareNET >> ${logsDir}Software_${date}.log
}

function backupRoutine_removeOLD {
    find ${BACKUPS_PATH} -maxdepth 1 -type f -print0  | while IFS= read -d '' -r file
    do
    if [[ "$(basename "$file")" =~ ^[0-9]{12}.tgz$ ]]; then
        [ "$(basename "$file" .tgz)" -le "$THRESHOLD" ] && rm -v -- "$file"
    else
        [ $DELETE_OTHERS == "yes" ] && rm -v -- "$file"
    fi
    done
}

function backupRoutine_backupWEEKLY {
    backupRoutine_backupDAILY
    cd ${NFSShare}
    for i in "${machines[@]}"
        do
        case $i in
            192.168.1.1)
                name="${raspi1[1]}"
                BACKUPS_PATH="${name}${archive}"
                DAILY_PATH="${name}${daily}"
                ;;
            192.168.1.2)
                name="${raspi2[1]}"
                BACKUPS_PATH="${name}${archive}"
                DAILY_PATH="${name}${daily}"
                ;;
            192.168.1.3)
                name="${raspi3[1]}"
                BACKUPS_PATH="${name}${archive}"
                DAILY_PATH="${name}${daily}"
                ;;
            192.168.1.4)
                name="${raspi4[1]}"
                BACKUPS_PATH="${name}${archive}"
                DAILY_PATH="${name}${daily}"
                ;;
            192.168.0.130)
                name="${raspi6[1]}"
                BACKUPS_PATH="${name}${archive}"
                DAILY_PATH="${name}${daily}"
                ;;
            192.168.0.131)
                name="${raspi7[1]}"
                BACKUPS_PATH="${name}${archive}"
                DAILY_PATH="${name}${daily}"
                ;;
            192.168.0.2)
                name="${raspi1[1]}"
                BACKUPS_PATH="${name}${archive}"
                DAILY_PATH="${name}${daily}"
                ;;
            192.168.0.5)
                name="${raspi1[1]}"
                BACKUPS_PATH="${name}${archive}"
                DAILY_PATH="${name}${daily}"
                ;;
        esac
        backupRoutine_removeOLD
        tar -zcvf ${BACKUPS_PATH}${date}.tgz ./${DAILY_PATH}
    done
}
        


    
function backupRoutine_backupGUI {
    date=$(date +%d-%m-%Y_%H:%M)
    serverList=$(zenity --list --text "Resource To Backup." --height=400 --width=400 --checklist --column "Pick" --column "options" FALSE "All" FALSE "${raspi1[1]}" FALSE "${raspi2[1]}" FALSE "${raspi3[1]}" FALSE "${raspi4[1]}" FALSE "${raspi6[1]}" FALSE "${raspi7[1]}" FALSE "GitRepo" FALSE "NFS-Backup-Drive" FALSE "Backup-Local-Drive-To-EntServer")
    array=(${serverList//|/ })
    for i in "${array[@]}"
        do
          case $i in
            "All")
                backupRoutine_backupDAILY
                ;;
            "${raspi1[1]}")
                backupRoutine_RASPI1
                ;;
            "${raspi2[1]}")
                backupRoutine_RASPI2
                ;;
            "${raspi3[1]}")
                backupRoutine_RASPI3
                ;;
            "${raspi4[1]}")
                backupRoutine_RASPI4
                ;;
            "${raspi6[1]}")
                backupRoutine_RASPI6
                ;;
            "${raspi7[1]}")
                backupRoutine_RASPI7
                ;;
            "GitRepo")
                backupRoutine_backupGitRepo
                ;;
            "NFS-Backup-Drive")
                backupRoutine_backupNFSShare
                ;;
            esac
        done
    }
